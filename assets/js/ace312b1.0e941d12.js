"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[527],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>c});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(r),d=n,c=m["".concat(p,".").concat(d)]||m[d]||k[d]||l;return r?a.createElement(c,o(o({ref:t},u),{},{components:r})):a.createElement(c,o({ref:t},u))}));function c(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:n,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7598:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>k,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const l={title:"Result<Ok, Error>",sidebar_label:"Result"},o=void 0,i={unversionedId:"result",id:"result",title:"Result<Ok, Error>",description:"The Result can replace exception flows.",source:"@site/docs/result.md",sourceDirName:".",slug:"/result",permalink:"/boxed/result",draft:!1,editUrl:"https://github.com/swan-io/boxed/edit/main/docs/docs/result.md",tags:[],version:"current",frontMatter:{title:"Result<Ok, Error>",sidebar_label:"Result"},sidebar:"docs",previous:{title:"Option",permalink:"/boxed/option"},next:{title:"AsyncData",permalink:"/boxed/async-data"}},p={},s=[{value:"Create a Result value",id:"create-a-result-value",level:2},{value:"Methods",id:"methods",level:2},{value:".map(f)",id:"mapf",level:3},{value:".mapError(f)",id:"maperrorf",level:3},{value:".flatMap(f)",id:"flatmapf",level:3},{value:".flatMapError(f)",id:"flatmaperrorf",level:3},{value:".getOr(defaultValue)",id:"getordefaultvalue",level:3},{value:".mapOr(defaultValue, mapper)",id:"mapordefaultvalue-mapper",level:3},{value:".get()",id:"get",level:3},{value:".getError()",id:"geterror",level:3},{value:".isOk()",id:"isok",level:3},{value:".isError()",id:"iserror",level:3},{value:".toOption()",id:"tooption",level:3},{value:".match()",id:"match",level:3},{value:".tap(func)",id:"tapfunc",level:3},{value:".tapOk(func)",id:"tapokfunc",level:3},{value:".tapError(func)",id:"taperrorfunc",level:3},{value:"Statics",id:"statics",level:2},{value:"Result.fromPredicate(value, predicate, error)",id:"resultfrompredicatevalue-predicate-error",level:3},{value:"Result.isResult(value)",id:"resultisresultvalue",level:3},{value:"Result.all(results)",id:"resultallresults",level:3},{value:"Result.allFromDict(results)",id:"resultallfromdictresults",level:3},{value:"Result.fromExecution(() =&gt; value)",id:"resultfromexecution--value",level:3},{value:"Result.fromPromise(promise)",id:"resultfrompromisepromise",level:3},{value:"Result.fromOption(option, valueIfNone)",id:"resultfromoptionoption-valueifnone",level:3},{value:"TS Pattern interop",id:"ts-pattern-interop",level:2},{value:"Cheatsheet",id:"cheatsheet",level:2}],u={toc:s},m="wrapper";function k(e){let{components:t,...r}=e;return(0,n.kt)(m,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Result")," can replace exception flows."),(0,n.kt)("p",null,"Exceptions can be tricky to handle: there's nothing in the type system that tracks if an error has been handled, which is error prone, and adds to your mental overhead. ",(0,n.kt)("inlineCode",{parentName:"p"},"Result")," helps as it ",(0,n.kt)("strong",{parentName:"p"},"makes the value hold the success state"),", making it dead-simple to track with a type-system."),(0,n.kt)("p",null,"Just like the ",(0,n.kt)("inlineCode",{parentName:"p"},"Option")," type, the ",(0,n.kt)("inlineCode",{parentName:"p"},"Result")," type is a box that can have two states:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Ok(value)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Error(error)"))),(0,n.kt)("h2",{id:"create-a-result-value"},"Create a Result value"),(0,n.kt)("p",null,"To create a result, use the ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"Error")," constructors:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { Result } from "@swan-io/boxed";\n\nconst ok = Result.Ok(1);\n\nconst notOk = Result.Error("something happened");\n')),(0,n.kt)("p",null,"You can convert an option to a ",(0,n.kt)("inlineCode",{parentName:"p"},"Result"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { Result, Option } from "@swan-io/boxed";\n\nconst a = Result.fromOption(Option.Some(1), "NotFound");\n// Ok<1>\n\nconst b = Result.fromOption(Option.None(), "NotFound");\n// Error<"NotFound">\n')),(0,n.kt)("p",null,"You get interop with exceptions and promises:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'// Let\'s say you have some function that throws an error\nconst init = (id: string) => {\n  if (id.length !== 24) {\n    throw new Error();\n  }\n  return new Client({ id });\n};\n\nconst result = Result.fromExecution(() => init(id));\n// Here, result will either be:\n// - Ok(client)\n// - Error(error)\n\n// It works with promises too:\n\nconst value = await Result.fromPromise(() => fetch("/api"));\n// `value` will either be:\n// - Ok(res)\n// - Error(error)\n')),(0,n.kt)("admonition",{title:"Since v3.0.0",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},"Result")," values are referentially equal if they contain the same value, meaning that ",(0,n.kt)("inlineCode",{parentName:"p"},"Result.Ok(1) === Result.Ok(1)")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"Result.Error(1) === Result.Error(1)"),".")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("p",null,"The result type provides a few manipulation functions:"),(0,n.kt)("h3",{id:"mapf"},".map(f)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.map<B>(f: (value: A) => B): Result<B, E>\n")),(0,n.kt)("p",null,"If the result is ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok(value)")," returns ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok(f(value))"),", otherwise returns ",(0,n.kt)("inlineCode",{parentName:"p"},"Error(error)"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"Result.Ok(2).map((x) => x * 2);\n// Result.Ok<4>\n\nResult.Ok(2).map((x) => Result.Ok(x * 2));\n// Result.Ok<Result.Ok<4>>\n")),(0,n.kt)("h3",{id:"maperrorf"},".mapError(f)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.mapError<F>(f: (value: E) => F): Result<A, F>\n")),(0,n.kt)("p",null,"If the result is ",(0,n.kt)("inlineCode",{parentName:"p"},"Error(error)")," returns ",(0,n.kt)("inlineCode",{parentName:"p"},"Error(f(error))"),", otherwise returns ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok(value)"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"Result.Error(2).mapError((x) => x * 2);\n// Result.Error<4>\n\nResult.Error(2).mapError((x) => Result.Ok(x * 2));\n// Result.Error<Result.Ok<4>>\n")),(0,n.kt)("h3",{id:"flatmapf"},".flatMap(f)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.flatMap<B, F>(f: (value: A) => Result<B, F>): Result<B, F | E>\n")),(0,n.kt)("p",null,"If the result is ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok(value)")," returns ",(0,n.kt)("inlineCode",{parentName:"p"},"f(value)"),", otherwise returns ",(0,n.kt)("inlineCode",{parentName:"p"},"Error(error)"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},'Result.Ok(1).flatMap((x) =>\n  x > 2 ? Result.Error("some error") : Result.Ok(2),\n);\n// Result.Ok<2>\n\nResult.Ok(3).flatMap((x) =>\n  x > 2 ? Result.Error("some error") : Result.Ok(2),\n);\n// Result.Error<"some error">\n\nResult.Error("initial error").flatMap((x) =>\n  x > 2 ? Result.Error("some error") : Result.Ok(2),\n);\n// Result.Error<"initial error">\n')),(0,n.kt)("h3",{id:"flatmaperrorf"},".flatMapError(f)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.flatMapError<B, F>(f: (value: E) => Result<B, F>): Result<A | B, F>\n")),(0,n.kt)("p",null,"If the result is ",(0,n.kt)("inlineCode",{parentName:"p"},"Error(error)")," returns ",(0,n.kt)("inlineCode",{parentName:"p"},"f(error)"),", otherwise returns ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok(value)"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},'Result.Error(3).flatMapError((x) =>\n  x > 2 ? Result.Error("some error") : Result.Ok(2),\n);\n// Result.Error<"some error">\n\nResult.Error(1).flatMapError((x) =>\n  x > 2 ? Result.Error("some error") : Result.Ok(2),\n);\n// Result.Ok<2>\n\nResult.Ok("ok").flatMapError((x) =>\n  x > 2 ? Result.Error("some error") : Result.Ok(2),\n);\n// Result.Ok<"ok">\n')),(0,n.kt)("h3",{id:"getordefaultvalue"},".getOr(defaultValue)"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Alias: ",(0,n.kt)("inlineCode",{parentName:"p"},"getWithDefault"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.getOr(defaultValue: A): A\n")),(0,n.kt)("p",null,"If the result is ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok(value)")," returns ",(0,n.kt)("inlineCode",{parentName:"p"},"value"),", otherwise returns ",(0,n.kt)("inlineCode",{parentName:"p"},"defaultValue"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"Result.Ok(2).getOr(1);\n// 2\n\nResult.Error(2).getOr(1);\n// 1\n")),(0,n.kt)("h3",{id:"mapordefaultvalue-mapper"},".mapOr(defaultValue, mapper)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.mapOr(defaultValue: B, mapper: (a: A) => B): B\n")),(0,n.kt)("p",null,"If the option is ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok(value)")," returns ",(0,n.kt)("inlineCode",{parentName:"p"},"mapper(value)"),", otherwise returns ",(0,n.kt)("inlineCode",{parentName:"p"},"defaultValue"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},'Result.Ok(2).mapOr(1, (x) => x * 2);\n// 4\n\nResult.Error("error").mapOr(1, (x) => x * 2);\n// 1\n')),(0,n.kt)("h3",{id:"get"},".get()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.get(): A\n")),(0,n.kt)("p",null,"Returns the value contained in ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok(value)"),". Only usable within a ",(0,n.kt)("inlineCode",{parentName:"p"},"isOk()")," check."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"const value = result.get();\n// does not compile\n\nif (result.isOk()) {\n  const value = result.get();\n  // value\n}\n")),(0,n.kt)("h3",{id:"geterror"},".getError()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.getError(): E\n")),(0,n.kt)("p",null,"Returns the error contained in ",(0,n.kt)("inlineCode",{parentName:"p"},"Error(error)"),". Only usable within a ",(0,n.kt)("inlineCode",{parentName:"p"},"isError()")," check."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"const error = result.getError();\n// does not compile\n\nif (result.isError()) {\n  const error = result.getError();\n  // error\n}\n")),(0,n.kt)("h3",{id:"isok"},".isOk()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.isOk(): boolean\n")),(0,n.kt)("p",null,"Type guard. Checks if the result is ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok(value)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"Result.Ok(2).isOk();\n// true\n\nResult.Error(2).isOk();\n// false\n\nif (result.isOk()) {\n  const value = result.get();\n}\n")),(0,n.kt)("h3",{id:"iserror"},".isError()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.isError(): boolean\n")),(0,n.kt)("p",null,"Type guard. Checks if the result is ",(0,n.kt)("inlineCode",{parentName:"p"},"Error(error)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"Result.Ok(2).isError();\n// false\n\nResult.Error().isError();\n// true\n\nif (result.isError()) {\n  const value = result.getError();\n}\n")),(0,n.kt)("h3",{id:"tooption"},".toOption()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.toOption(): Option<A>\n")),(0,n.kt)("p",null,"If the result is ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok(value)")," returns ",(0,n.kt)("inlineCode",{parentName:"p"},"Some(value)"),", otherwise returns ",(0,n.kt)("inlineCode",{parentName:"p"},"None"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"Result.Ok(2).toOption();\n// Option.Some<2>\n\nResult.Error(2).toOption();\n// Option.None\n")),(0,n.kt)("h3",{id:"match"},".match()"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.match<B>(config: {\n  Ok: (value: A) => B;\n  Error: (error: E) => B;\n}): B\n")),(0,n.kt)("p",null,"Match the result state"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},'const valueToDisplay = result.match({\n  Ok: (value) => value,\n  Error: (error) => {\n    console.error(error);\n    return "fallback";\n  },\n});\n')),(0,n.kt)("h3",{id:"tapfunc"},".tap(func)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.tap(func: (result: Result<A, E>) => unknown): Result<A, E>\n")),(0,n.kt)("p",null,"Executes ",(0,n.kt)("inlineCode",{parentName:"p"},"func")," with ",(0,n.kt)("inlineCode",{parentName:"p"},"result"),", and returns ",(0,n.kt)("inlineCode",{parentName:"p"},"result"),". Useful for logging and debugging."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"result.tap(console.log).map((x) => x * 2);\n")),(0,n.kt)("h3",{id:"tapokfunc"},".tapOk(func)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.tapOk(func: (value: A) => unknown): Result<A, E>\n")),(0,n.kt)("p",null,"Executes ",(0,n.kt)("inlineCode",{parentName:"p"},"func")," with ",(0,n.kt)("inlineCode",{parentName:"p"},"ok"),", and returns ",(0,n.kt)("inlineCode",{parentName:"p"},"result"),". Useful for logging and debugging. No-op if ",(0,n.kt)("inlineCode",{parentName:"p"},"result")," is an error."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"result.tapOk(console.log).map((x) => x * 2);\n")),(0,n.kt)("h3",{id:"taperrorfunc"},".tapError(func)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"Result<A, E>.tapError(func: (error: E) => unknown): Result<A, E>\n")),(0,n.kt)("p",null,"Executes ",(0,n.kt)("inlineCode",{parentName:"p"},"func")," with ",(0,n.kt)("inlineCode",{parentName:"p"},"error"),", and returns ",(0,n.kt)("inlineCode",{parentName:"p"},"result"),". Useful for logging and debugging. No-op if ",(0,n.kt)("inlineCode",{parentName:"p"},"result")," is ok."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"result.tapError(console.log).map((x) => x * 2);\n")),(0,n.kt)("h2",{id:"statics"},"Statics"),(0,n.kt)("h3",{id:"resultfrompredicatevalue-predicate-error"},"Result.fromPredicate(value, predicate, error)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"fromPredicate(value: A, f: (value: A) => boolean, errorIfFalse: E): Result<A, E>\n")),(0,n.kt)("p",null,"Creates an option from a value and a predicate. Will return ",(0,n.kt)("inlineCode",{parentName:"p"},"Ok(value)")," if predicate returns ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"Error(errorIfFalse)")," if ",(0,n.kt)("inlineCode",{parentName:"p"},"false")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},'Result.fromPredicate(\n  value,\n  (value) => value % 2 === 0,\n  new Error("Odd number"),\n);\n// Ok<number> if `number` is even, Error<Error> if odd\n')),(0,n.kt)("h3",{id:"resultisresultvalue"},"Result.isResult(value)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"isResult(value: unknown): boolean\n")),(0,n.kt)("p",null,"Type guard, checks if the provided value is a result."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"Result.isResult(Result.Ok(1));\n// true\n\nResult.isResult([]);\n// false\n")),(0,n.kt)("h3",{id:"resultallresults"},"Result.all(results)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"all(options: Array<Result<A, E>>): Result<Array<A>, E>\n")),(0,n.kt)("p",null,'Turns an "array of results of value" into a "result of array of value".'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},'Result.all([Result.Ok(1), Result.Ok(2), Result.Ok(3)]);\n// Result.Ok<[1, 2, 3]>\n\nResult.all([Result.Error("error"), Result.Ok(2), Result.Ok(3)]);\n// Result.Error<"error">\n')),(0,n.kt)("h3",{id:"resultallfromdictresults"},"Result.allFromDict(results)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"allFromDict(options: Dict<Result<A, E>>): Result<Dict<A>, E>\n")),(0,n.kt)("p",null,'Turns a "dict of results of value" into a "result of dict of value".'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},'Result.allFromDict({ a: Result.Ok(1), b: Result.Ok(2), c: Result.Ok(3) });\n// Result.Ok<{a: 1, b: 2, c: 3}>\n\nResult.allFromDict({\n  a: Result.Error("error"),\n  b: Result.Ok(2),\n  c: Result.Ok(3),\n});\n// Result.Error<"error">\n')),(0,n.kt)("h3",{id:"resultfromexecution--value"},"Result.fromExecution(() => value)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"fromExecution<A, E>(func: () => A) => Result<A, E>\n")),(0,n.kt)("p",null,"Takes a function returning ",(0,n.kt)("inlineCode",{parentName:"p"},"Value")," that can throw an ",(0,n.kt)("inlineCode",{parentName:"p"},"Error")," and returns a ",(0,n.kt)("inlineCode",{parentName:"p"},"Result<Value, Error>")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},'Result.fromExecution(() => 1);\n// Result.Ok<1>\n\nResult.fromExecution(() => {\n  throw "Something went wrong";\n});\n// Result.Error<"Something went wrong">\n')),(0,n.kt)("h3",{id:"resultfrompromisepromise"},"Result.fromPromise(promise)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"fromPromise<A, E>(promise: Promise<A>) => Promise<Result<A, E>>\n")),(0,n.kt)("p",null,"Takes a ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise<Value>")," that can fail with ",(0,n.kt)("inlineCode",{parentName:"p"},"Error")," and returns a ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise<Result<Value, Error>>")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},"await Result.fromPromise(Promise.resolve(1));\n// Result.Ok<1>\n\nawait Result.fromPromise(Promise.reject(1));\n// Result.Error<1>\n")),(0,n.kt)("h3",{id:"resultfromoptionoption-valueifnone"},"Result.fromOption(option, valueIfNone)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"fromOption<A, E>(option: Option<A>, valueWhenNone: E): Result<A, E>\n")),(0,n.kt)("p",null,"Takes a function returning ",(0,n.kt)("inlineCode",{parentName:"p"},"Value")," that can throw an ",(0,n.kt)("inlineCode",{parentName:"p"},"Error")," and returns a ",(0,n.kt)("inlineCode",{parentName:"p"},"Result<Value, Error>")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Examples"',title:'"Examples"'},'const a = Result.fromOption(Option.Some(1), "NotFound");\n// Result.Ok<1>\n\nconst b = Result.fromOption(Option.None(), "NotFound");\n// Result.Error<"NotFound">\n')),(0,n.kt)("h2",{id:"ts-pattern-interop"},"TS Pattern interop"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { match, P } from "ts-pattern";\nimport { Result } from "@swan-io/boxed";\n\nmatch(myResult)\n  .with(Result.P.Ok(P.select()), (value) => console.log(value))\n  .with(Result.P.Error(P.select()), (error) => {\n    console.error(error);\n    return "fallback";\n  })\n  .exhaustive();\n')),(0,n.kt)("h2",{id:"cheatsheet"},"Cheatsheet"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Method"),(0,n.kt)("th",{parentName:"tr",align:null},"Input"),(0,n.kt)("th",{parentName:"tr",align:null},"Function input"),(0,n.kt)("th",{parentName:"tr",align:null},"Function output"),(0,n.kt)("th",{parentName:"tr",align:null},"Returned value"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#mapf"},(0,n.kt)("inlineCode",{parentName:"a"},"map"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(x)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"x")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"y")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(y)"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#mapf"},(0,n.kt)("inlineCode",{parentName:"a"},"map"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(e)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("em",{parentName:"td"},"not provided")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("em",{parentName:"td"},"not executed")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(e)"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#maperrorf"},(0,n.kt)("inlineCode",{parentName:"a"},"mapError"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(x)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("em",{parentName:"td"},"not provided")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("em",{parentName:"td"},"not executed")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(x)"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#maperrorf"},(0,n.kt)("inlineCode",{parentName:"a"},"mapError"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(e)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"e")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"f")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(f)"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#flatmapf"},(0,n.kt)("inlineCode",{parentName:"a"},"flatMap"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(x)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"x")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(y)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(y)"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#flatmapf"},(0,n.kt)("inlineCode",{parentName:"a"},"flatMap"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(x)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"x")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(f)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(f)"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#flatmapf"},(0,n.kt)("inlineCode",{parentName:"a"},"flatMap"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(e)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("em",{parentName:"td"},"not provided")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("em",{parentName:"td"},"not executed")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(e)"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#flatmaperrorf"},(0,n.kt)("inlineCode",{parentName:"a"},"flatMapError"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(x)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("em",{parentName:"td"},"not provided")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("em",{parentName:"td"},"not executed")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(x)"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#flatmaperrorf"},(0,n.kt)("inlineCode",{parentName:"a"},"flatMapError"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(e)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"e")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(y)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Ok(y)"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#flatmaperrorf"},(0,n.kt)("inlineCode",{parentName:"a"},"flatMapError"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(e)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"e")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(f)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Error(f)"))))))}k.isMDXComponent=!0}}]);